import matplotlib.pyplot as plt
import numpy as np


#Considerando que houveram 2 execuções para cada par (<numThreads>, <N>)
#teriamos os dados hipotéticos abaixo. 
#Para a geração do gráfico da aula prática 5, você deve executar 30 vezes. 
#Assim, por exemplo, na linha 12, deve conter 30 valores (separados por virgula). 

#Dados para numThreads = 1
T1 = [
[
0.00017, 0.00015, 0.00010, 0.00013, 0.00013, 0.00014, 0.00014, 0.00014, 0.00015, 0.00015, 0.00015, 0.00015, 0.00015, 0.00016, 0.00012, 0.00015, 0.00015, 0.00014, 0.00015, 0.00015, 0.00014, 0.00015, 0.00015, 0.00014, 0.00015, 0.00015, 0.00015, 0.00015, 0.00015 
], #100

[
0.00029, 0.00033, 0.00034, 0.00034, 0.00033, 0.00034, 0.00034, 0.00035, 0.00042, 0.00035, 0.00035, 0.00033, 0.00033, 0.00035, 0.00035, 0.00037, 0.00037, 0.00037, 0.00036, 0.00036, 0.00037, 0.00037, 0.00038, 0.00037, 0.00037, 0.00037, 0.00037, 0.00036, 0.00037
], #1000

[
	0.00082, 0.00080, 0.00079, 0.00083, 0.00081, 0.00081, 0.00080, 0.00082, 0.00093, 0.00091, 0.00088, 0.00090, 0.00091, 0.00091, 0.00091, 0.00089, 0.00089, 0.00097, 0.00088, 0.00089, 0.00089, 0.00089, 0.00089, 0.00089, 0.00087, 0.00089, 0.00089, 0.00089, 0.00089
], #10000
[
	0.00407, 0.00404, 0.00486, 0.00610, 0.00611, 0.00608, 0.00612, 0.00610, 0.00610, 0.00610, 0.00613, 0.00608, 0.00611, 0.00610, 0.00607, 0.00606, 0.00611, 0.00615, 0.00610, 0.00609, 0.00609, 0.00611, 0.00609, 0.00610, 0.00617, 0.00606, 0.00609, 0.00612, 0.00612 
], #100000
[
	0.03795, 0.02179, 0.02179, 0.02187, 0.02177, 0.02180, 0.02186, 0.02184, 0.02181, 0.02178, 0.02184, 0.02181, 0.02182, 0.02184, 0.02179, 0.01938, 0.01938, 0.01943, 0.01936, 0.01942, 0.01939, 0.01812, 0.01766, 0.01758, 0.01757, 0.01761, 0.01760, 0.01766, 0.01759
], #1000000
[
	0.19202, 0.19108, 0.19064, 0.19095, 0.19066, 0.19062, 0.19065, 0.19103, 0.19077, 0.19062, 0.19074, 0.19092, 0.19077, 0.19080, 0.22511, 0.19139, 0.19257, 0.19152, 0.19063, 0.19088, 0.19085, 0.19086, 0.19046, 0.19054, 0.19076, 0.19062, 0.19076, 0.19073, 0.19080
], #10000000
[
	2.67554, 2.69557, 2.66685, 2.66857, 2.66478, 2.66729, 2.66913, 2.66832, 2.67750, 2.66524, 2.66792, 2.66416, 2.66655, 3.02445, 2.66700, 2.66604, 2.66287, 2.69361, 2.66942, 2.67019, 2.69329, 2.66830, 2.66649, 2.66735, 2.66662, 2.66724, 2.66857, 2.66737, 2.66676 
], #100000000
[
	27.41924, 27.37717, 27.41466, 27.43298, 27.40300, 27.41156, 27.41287, 27.47540, 27.42853, 27.48101, 27.44385, 28.79758, 27.44713, 27.43281, 27.43581, 27.44858, 28.74272, 27.41904, 27.44244, 30.11884, 28.78659, 27.46302, 27.44108, 28.23200, 28.16517, 28.22525, 27.45027, 27.43499, 27.45884 
]  #1000000000
]

#Dados para numThreads = 6
T6 = [
[
	0.00058, 0.00040, 0.00034, 0.00032, 0.00049, 0.00050, 0.00040, 0.00069, 0.00032, 0.00038, 0.00042, 0.00045, 0.00068, 0.00058, 0.00100, 0.00079, 0.00106, 0.00062, 0.00090, 0.00097, 0.00088, 0.00086, 0.00100, 0.00057, 0.00081, 0.00091, 0.00101, 0.00092, 0.00096
], #100
[
	0.00112, 0.00089, 0.00119, 0.00077, 0.00097, 0.00064, 0.00067, 0.00101, 0.00105, 0.00089, 0.00083, 0.00059, 0.00092, 0.00092, 0.00097, 0.00090, 0.00080, 0.00060, 0.00100, 0.00093, 0.00104, 0.00091, 0.00083, 0.00113, 0.00089, 0.00090, 0.00096, 0.00079, 0.00095 
], #1000
[
	0.00105, 0.00104, 0.00118, 0.00078, 0.00068, 0.00119, 0.00089, 0.00119, 0.00122, 0.00133, 0.00090, 0.00092, 0.00115, 0.00080, 0.00109, 0.00078, 0.00084, 0.00089, 0.00168, 0.00119, 0.00084, 0.00101, 0.00097, 0.00126, 0.00125, 0.00086, 0.00093, 0.00117, 0.00072 
], #10000
[
	0.00214, 0.00187, 0.00255, 0.00165, 0.00149, 0.00188, 0.00225, 0.00231, 0.00193, 0.00212, 0.00195, 0.00174, 0.00191, 0.00172, 0.00154, 0.00246, 0.00183, 0.00209, 0.00229, 0.00209, 0.00169, 0.00181, 0.00190, 0.00235, 0.00208, 0.00191, 0.00210, 0.00186, 0.00190 
], #100000
[
	0.00345, 0.00347, 0.00514, 0.00510, 0.00326, 0.00503, 0.00494, 0.00382, 0.00509, 0.00496, 0.00511, 0.00358, 0.00362, 0.00479, 0.00478, 0.00511, 0.00352, 0.00366, 0.00501, 0.00505, 0.00361, 0.00505, 0.00331, 0.00496, 0.00335, 0.00497, 0.00492, 0.00355, 0.00352
], #1000000
[
	0.04808, 0.04775, 0.04784, 0.04819, 0.04774, 0.04776, 0.06284, 0.06369, 0.04846, 0.06105, 0.04779, 0.04785, 0.04853, 0.04837, 0.06243, 0.06344, 0.04811, 0.06352, 0.06332, 0.04803, 0.04815, 0.04865, 0.06051, 0.04886, 0.04865, 0.06497, 0.04853, 0.05997, 0.06389 
], #10000000
[
	0.50682, 0.48236, 0.52288, 0.48502, 0.53119, 0.51311, 0.51789, 0.48310, 0.48289, 0.58561, 0.57630, 0.49823, 0.48265, 0.48310, 0.49492, 0.48296, 0.49684, 0.49911, 0.48330, 0.50180, 0.48319, 0.48324, 0.49736, 0.49785, 0.49665, 0.48284, 0.48243, 0.50393, 0.48499 
], #100000000
[
	4.84242, 4.85256, 4.84310, 4.91535, 4.84385, 5.00581, 4.87338, 4.89423, 4.84856, 4.84058, 4.83637, 5.07564, 4.84458, 4.88014, 4.87867, 4.86170, 4.83455, 4.98376, 4.88603, 4.84198, 4.84734, 4.85984, 4.83310, 5.08411, 4.83625, 4.84635, 4.83448, 4.85034, 4.84676
]  #1000000000
]

#Dados para numThreads = 12
T12 = [
[
0.00115, 0.00169, 0.00148, 0.00142, 0.00137, 0.00106, 0.00149, 0.00138, 0.00158, 0.00138, 0.00148, 0.00149, 0.00114, 0.00143, 0.00126, 0.00139, 0.00137, 0.00112, 0.00112, 0.00124, 0.00159, 0.00136, 0.00136, 0.00152, 0.00096, 0.00123, 0.00130, 0.00075, 0.00082
], #100
[
0.00145, 0.00123, 0.00135, 0.00105, 0.00145, 0.00113, 0.00092, 0.00091, 0.00091, 0.00120, 0.00071, 0.00026, 0.00030, 0.00069, 0.00066, 0.00035, 0.00043, 0.00046, 0.00065, 0.00062, 0.00062, 0.00042, 0.00059, 0.00071, 0.00055, 0.00093, 0.00103, 0.00108, 0.00106 
], #1000
[
0.00109, 0.00118, 0.00130, 0.00104, 0.00119, 0.00141, 0.00086, 0.00088, 0.00085, 0.00065, 0.00074, 0.00087, 0.00071, 0.00066, 0.00096, 0.00086, 0.00048, 0.00092, 0.00083, 0.00055, 0.00050, 0.00102, 0.00100, 0.00047, 0.00078, 0.00080, 0.00065, 0.00103, 0.00105
], #10000
[
0.00192, 0.00179, 0.00221, 0.00208, 0.00248, 0.00224, 0.00228, 0.00197, 0.00209, 0.00227, 0.00213, 0.00227, 0.00218, 0.00204, 0.00203, 0.00202, 0.00237, 0.00233, 0.00212, 0.00144, 0.00165, 0.00210, 0.00162, 0.00178, 0.00154, 0.00126, 0.00173, 0.00156, 0.00147
], #100000
[
0.00431, 0.00391, 0.00405, 0.00290, 0.00414, 0.00396, 0.00305, 0.00410, 0.00384, 0.00362, 0.00269, 0.00366, 0.00398, 0.00435, 0.00417, 0.00418, 0.00300, 0.00310, 0.00400, 0.00411, 0.00342, 0.00381, 0.00461, 0.00275, 0.00288, 0.00379, 0.00262, 0.00360, 0.00411
], #1000000
[
0.03353, 0.03403, 0.03830, 0.03392, 0.03410, 0.03773, 0.03376, 0.03405, 0.03409, 0.03413, 0.03388, 0.03406, 0.03460, 0.03378, 0.03922, 0.03518, 0.03416, 0.03374, 0.03548, 0.03545, 0.03333, 0.03393, 0.03432, 0.03382, 0.03781, 0.03404, 0.03614, 0.03371, 0.03672 
], #10000000
[
0.38491, 0.38841, 0.38638, 0.38832, 0.38832, 0.38638, 0.38809, 0.38518, 0.38657, 0.39810, 0.38747, 0.38758, 0.38554, 0.38772, 0.38559, 0.38550, 0.38721, 0.38595, 0.38766, 0.38886, 0.38582, 0.38622, 0.38546, 0.38609, 0.38766, 0.38838, 0.38864, 0.38904, 0.38666 
], #100000000
[
4.03627, 3.88399, 3.86428, 3.86640, 3.86841, 3.86577, 3.88167, 3.88552, 4.06878, 3.85683, 3.88264, 3.88129, 3.85328, 3.85317, 3.88268, 4.02148, 3.89389, 3.86134, 3.86520, 3.86821, 3.86048, 3.86307, 3.88394, 3.96219, 3.86703, 3.88118, 3.86307, 3.88228, 3.88277
]  #1000000000
]

#Dados para numThreads = 18
T18 = [
[ 
	0.00033, 0.00057, 0.00038, 0.00083, 0.00099, 0.00090, 0.00060, 0.00061, 0.00063, 0.00091, 0.00076, 0.00106, 0.00106, 0.00128, 0.00147, 0.00155, 0.00150, 0.00145, 0.00149, 0.00150, 0.00134, 0.00148, 0.00146, 0.00152, 0.00167, 0.00160, 0.00158, 0.00142, 0.00128
], #100
[ 
	0.00138, 0.00111, 0.00144, 0.00111, 0.00140, 0.00125, 0.00114, 0.00139, 0.00118, 0.00114, 0.00124, 0.00147, 0.00134, 0.00100, 0.00161, 0.00153, 0.00134, 0.00133, 0.00131, 0.00109, 0.00155, 0.00121, 0.00146, 0.00135, 0.00179, 0.00154, 0.00149, 0.00121, 0.00146 
], #1000
[ 
	0.00114, 0.00069, 0.00095, 0.00089, 0.00121, 0.00068, 0.00112, 0.00132, 0.00114, 0.00090, 0.00063, 0.00119, 0.00108, 0.00072, 0.00086, 0.00080, 0.00082, 0.00085, 0.00078, 0.00090, 0.00091, 0.00093, 0.00093, 0.00085, 0.00086, 0.00101, 0.00108, 0.00090, 0.00085
], #10000
[ 
	0.00197, 0.00204, 0.00238, 0.00226, 0.00194, 0.00192, 0.00163, 0.00205, 0.00197, 0.00176, 0.00215, 0.00164, 0.00204, 0.00160, 0.00168, 0.00185, 0.00150, 0.00235, 0.00170, 0.00202, 0.00181, 0.00174, 0.00255, 0.00189, 0.00181, 0.00172, 0.00190, 0.00219, 0.00219
], #100000
[ 
	0.00469, 0.00411, 0.00396, 0.00378, 0.00328, 0.00329, 0.00375, 0.00436, 0.00344, 0.00342, 0.00394, 0.00328, 0.00348, 0.00383, 0.00359, 0.00351, 0.00327, 0.00337, 0.00349, 0.00390, 0.00368, 0.00337, 0.00363, 0.00330, 0.00321, 0.00336, 0.00393, 0.00334, 0.00358
], #1000000
[ 
	0.03672, 0.03303, 0.03196, 0.03625, 0.03855, 0.03047, 0.03624, 0.03512, 0.03828, 0.03768, 0.03618, 0.02888, 0.03211, 0.03512, 0.03382, 0.03789, 0.03822, 0.03781, 0.03534, 0.03560, 0.03814, 0.03753, 0.03649, 0.04117, 0.03341, 0.03044, 0.03251, 0.04253, 0.03278
], #10000000
[ 
	0.40356, 0.39841, 0.41020, 0.40407, 0.40188, 0.39839, 0.42305, 0.41728, 0.40614, 0.40272, 0.39023, 0.40827, 0.40756, 0.41553, 0.40411, 0.39820, 0.40743, 0.41361, 0.39959, 0.41099, 0.42863, 0.40027, 0.40633, 0.40757, 0.40223, 0.39848, 0.40061, 0.41164, 0.38814 
], #100000000
[ 
	3.96194, 4.01330, 4.15428, 4.03928, 3.98624, 3.92782, 3.98063, 4.01140, 4.03762, 4.01221, 4.09511, 4.08068, 4.03839, 3.95183, 4.03279, 3.93504, 4.03333, 3.93673, 3.96162, 3.97653, 4.00495, 3.93208, 4.10541, 4.01003, 4.07752, 3.94059, 3.93779, 3.91107, 3.93206
]  #1000000000
]

#Dados para numThreads = 24
T24 = [
[
	0.00180, 0.00184, 0.00173, 0.00190, 0.00176, 0.00165, 0.00160, 0.00158, 0.00160, 0.00162, 0.00157, 0.00156, 0.00145, 0.00160, 0.00179, 0.00160, 0.00171, 0.00228, 0.00156, 0.00168, 0.00219, 0.00200, 0.00198, 0.00196, 0.00225, 0.00146, 0.00163, 0.00158, 0.00164
], #100
[
	0.00161, 0.00144, 0.00151, 0.00135, 0.00152, 0.00160, 0.00166, 0.00162, 0.00158, 0.00151, 0.00148, 0.00164, 0.00169, 0.00191, 0.00181, 0.00154, 0.00183, 0.00150, 0.00162, 0.00166, 0.00211, 0.00168, 0.00162, 0.00198, 0.00160, 0.00168, 0.00150, 0.00160, 0.00158
], #1000
[
	0.00117, 0.00116, 0.00100, 0.00111, 0.00109, 0.00116, 0.00121, 0.00128, 0.00116, 0.00161, 0.00142, 0.00142, 0.00121, 0.00097, 0.00110, 0.00111, 0.00122, 0.00103, 0.00110, 0.00109, 0.00150, 0.00147, 0.00120, 0.00135, 0.00143, 0.00150, 0.00133, 0.00110, 0.00152	
], #10000
[
	0.00193, 0.00185, 0.00191, 0.00190, 0.00235, 0.00189, 0.00205, 0.00224, 0.00209, 0.00213, 0.00194, 0.00214, 0.00265, 0.00223, 0.00213, 0.00203, 0.00231, 0.00234, 0.00204, 0.00234, 0.00235, 0.00180, 0.00236, 0.00193, 0.00206, 0.00217, 0.00184, 0.00190, 0.00266
], #100000
[
	0.00347, 0.00340, 0.00340, 0.00343, 0.00338, 0.00333, 0.00359, 0.00326, 0.00343, 0.00374, 0.00353, 0.00337, 0.00353, 0.00344, 0.00352, 0.00369, 0.00373, 0.00407, 0.00364, 0.00337, 0.00362, 0.00328, 0.00345, 0.00372, 0.00357, 0.00332, 0.00347, 0.00345, 0.00354
], #1000000
[
	0.03195, 0.03961, 0.03362, 0.03059, 0.03527, 0.03674, 0.03614, 0.03323, 0.03668, 0.03359, 0.03438, 0.03658, 0.03238, 0.03300, 0.03463, 0.03034, 0.03348, 0.03411, 0.03609, 0.03186, 0.03500, 0.03262, 0.03028, 0.03521, 0.03125, 0.03156, 0.03188, 0.03627, 0.03089
], #10000000
[
	0.38898,0.38866,0.39669,0.40168,0.38803,0.39662,0.38936,0.40072,0.37974,0.38475,0.38985,0.39464,0.39286,0.37827,0.38340,0.39424,0.38980,0.39404,0.39266,0.38616,0.38973,0.39852,0.39509,0.39468,0.38545,0.38798,0.39016,0.39491,0.38953
], #100000000
[
	3.87344, 3.87283, 3.94564, 3.88860, 3.88336, 3.89491, 3.88302, 3.92596, 3.95174, 3.97231, 3.89605, 3.90514, 3.86543, 3.87837, 3.89350, 3.86505, 3.85639, 3.97002, 3.86043, 3.89430, 3.89498, 3.86541, 3.88900, 3.94404, 3.97070, 3.90164, 3.89811, 3.87356, 3.89193
]  #1000000000
]


mediaT1 = []
stdT1 = []
mediaT6 = []
stdT6 = []

mediaT12 = []
stdT12 = []
mediaT18 = []
stdT18 = []
mediaT24 = []
stdT24 = []

for i in range(8): #8 valores distintos para N
	mediaT1.append(np.mean(T1[i]))
	stdT1.append(np.std(T1[i]))

	mediaT6.append(np.mean(T6[i]))
	stdT6.append(np.std(T6[i]))

	mediaT12.append(np.mean(T12[i]))
	stdT12.append(np.std(T12[i]))

	mediaT18.append(np.mean(T18[i]))
	stdT18.append(np.std(T18[i]))

	mediaT24.append(np.mean(T24[i]))
	stdT24.append(np.std(T24[i]))


fig = plt.figure(figsize=(10,5))
ax1 = fig.add_subplot(111)


## Média e desvio padrão ##

plt.errorbar(np.array(range(len(mediaT1)))*2, mediaT1, stdT1,label=r'1', color='#1F77B4', fmt='o', lw=1, capsize=4, markersize=8, markeredgecolor='#1F77B4', markerfacecolor='#8FBBD9')
plt.plot(np.array(range(len(mediaT1)))*2, mediaT1, color='#1F77B4',lw=2)

plt.errorbar(np.array(range(len(mediaT6)))*2, mediaT6, stdT6,label=r'6', color='#D62728', fmt='s', lw=1, capsize=4, markersize=8, markeredgecolor='#D62728', markerfacecolor='#EA9393')
plt.plot(np.array(range(len(mediaT6)))*2, mediaT6, color='#D62728',lw=2)

plt.errorbar(np.array(range(len(mediaT12)))*2, mediaT12, stdT12,label=r'12', color='#2CA02C', fmt='v', lw=1, capsize=4, markersize=8, markeredgecolor='#2CA02C', markerfacecolor='#95CF95')
plt.plot(np.array(range(len(mediaT12)))*2, mediaT12, color='#2CA02C',lw=2)

plt.errorbar(np.array(range(len(mediaT18)))*2, mediaT18, stdT18,label=r'18', color='#FF7F0E', fmt='D', lw=1, capsize=4, markersize=8, markeredgecolor='#FF7F0E', markerfacecolor='#FFBF86')
plt.plot(np.array(range(len(mediaT18)))*2, mediaT18, color='#FF7F0E',lw=2)

plt.errorbar(np.array(range(len(mediaT24)))*2, mediaT24, stdT24,label=r'24', color='#9467BD', fmt='^', lw=1, capsize=4, markersize=8, markeredgecolor='#9467BD', markerfacecolor='#C9B3DE')
plt.plot(np.array(range(len(mediaT24)))*2, mediaT24, color='#9467BD',lw=2)


ax1.yaxis.grid(True, linestyle='-', linewidth=0.5, which='major', color='lightgrey',alpha=1.0)
# ax1.xaxis.grid(True, linestyle='-', linewidth=0.5, which='major', color='lightgrey',alpha=1.0)

fontSize=12

ax1.set_axisbelow(True)
# ax1.set_title('Titulo', fontsize=fontSize+3, fontweight='bold')
ax1.set_xlabel(r'Tamanho do Vetor', fontsize=fontSize+2)
ax1.set_ylabel('Tempo médio (em seg)', fontsize=fontSize+2)
ax1.xaxis.set_label_coords(0.5, -0.08)
ax1.set_facecolor('white')


handles, labels = ax1.get_legend_handles_labels()
leg = ax1.legend(handles, labels, bbox_to_anchor=(0.01, 0.98), loc=2, borderaxespad=0., fontsize=fontSize)
leg.get_frame().set_facecolor('#FFFFFF')
plt.legend(title=r'Threads')


#Se quiser, pode escolher a forma de exibir os valores do eixo x
ticks = ['100', '1000', '10000', '100000', '1000000', '10000000', '100000000', '1000000000']
ticks = [r'$10^2$', r'$10^3$', r'$10^4$', r'$10^5$', r'$10^6$', r'$10^7$', r'$10^8$', r'$10^9$']

plt.xticks(range(0, len(ticks)*2, 2), ticks, fontsize=fontSize)
plt.yticks(fontsize=fontSize)
plt.xlim(-1, len(ticks)*2-1)
#plt.ylim(-10, 40)

plt.tight_layout()
# plt.show()

plt.savefig('Grafico.pdf',bbox_inches='tight')
